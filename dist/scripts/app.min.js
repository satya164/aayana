(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _instagram = require("./instagram");

var _instagram2 = _interopRequireDefault(_instagram);

var _particle = require("./particle");

var _particle2 = _interopRequireDefault(_particle);

// Load instagram photos
function loadPhotos(err, res) {
    var stream = document.getElementById("instagram-stream");

    if (err) {
        stream.innerHTML = '<div class="col small-12">An error occurred while loading photos :(</div>';

        return;
    }

    if (res.data.length === 0) {
        stream.innerHTML = '<div class="col small-12">No photos found :(</div>';

        return;
    }

    var fragment = document.createDocumentFragment();

    res.data.forEach(function (p) {
        var div = document.createElement("div"),
            link = document.createElement("a"),
            image = document.createElement("img"),
            caption = document.createElement("figcaption");

        div.className = "col small-12 medium-6 large-4";

        link.className = "photo";
        link.target = "_blank";
        link.href = p.link;

        if (window.screen.width <= 360 && window.devicePixelRatio === 1) {
            image.src = p.images.low_resolution.url;
        } else {
            image.src = p.images.standard_resolution.url;
        }

        for (var i = 0, l = p.tags.length; i < l; i++) {
            var tag = p.tags[i];

            if (i < l - 1 && (tag === "iamaayana" || tag.length > 15)) {
                continue;
            }

            caption.setAttribute("data-title", tag);

            break;
        }

        link.appendChild(image);
        link.appendChild(caption);

        div.appendChild(link);

        fragment.appendChild(div);
    });

    stream.innerHTML = "";
    stream.appendChild(fragment);
}

// Draw a flare on hero image
function renderParticles() {
    var canvas = document.getElementById("cover-flare");

    canvas.width = 600;
    canvas.height = 600;

    var ctx = canvas.getContext("2d"),
        x = canvas.getAttribute("width"),
        y = canvas.getAttribute("height");

    ctx.globalCompositeOperation = "lighter";

    var particles = [];

    for (var i = 0; i < 5; ++i) {
        particles.push(new _particle2["default"]({ ctx: ctx, x: x, y: y }));
    }

    function render() {
        ctx.clearRect(0, 0, x, y);

        particles.forEach(function (particle) {
            return particle.render();
        });

        var requestAnimationFrame = window.requestAnimationFrame || window.mozrequestAnimationFrame || window.webkitrequestAnimationFrame || window.msrequestAnimationFrame;

        if (requestAnimationFrame) {
            requestAnimationFrame(render);
        }
    }

    try {
        render();
    } catch (e) {
        // Failed to draw particles
    }
}

(0, _instagram2["default"])(function (err, res) {
    if (document.readyState === "complete") {
        loadPhotos(err, res);
    } else {
        document.onreadystatechange = function () {
            if (document.readyState === "complete") {
                loadPhotos(err, res);
                renderParticles();
            }
        };
    }
});

},{"./instagram":2,"./particle":4}],2:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports["default"] = instagram;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _jsonp = require("./jsonp");

var _jsonp2 = _interopRequireDefault(_jsonp);

var CLIENT_ID = "a93dfcee57b64124adc5fbc10181a7d0";
var TAG = "iamaayana";

function instagram(cb) {
    function getPhotos(callback) {
        (0, _jsonp2["default"])("https://api.instagram.com/v1/tags/" + TAG + "/media/recent?client_id=" + CLIENT_ID + "&count=12", function (err, res) {
            if (err) {
                return callback(err);
            }

            callback(null, res);

            if (res && res.data && res.data.length) {
                // Cache the response
                try {
                    window.localStorage.setItem("instagram-photos", JSON.stringify({
                        response: res,
                        timestamp: Date.now()
                    }));
                } catch (e) {
                    // Failed to cache data
                }
            }
        });
    }

    var cached = undefined;

    try {
        cached = JSON.parse(window.localStorage.getItem("instagram-photos"));
    } catch (e) {
        // We don't have any cached data
    }

    if (cached) {
        var timestamp = parseInt(cached.timestamp, 10);

        if (cached.response && cached.response.data && cached.response.data.length) {
            // Return cached data
            cb(null, cached.response);

            if (isNaN(timestamp) || Date.now() - timestamp > 3600000) {
                // It's been over an hour
                try {
                    window.localStorage.deleteItem("instagram-photos");
                } catch (e) {}
                // Failed to clear data

                // Fetch data again
                getPhotos(function () {});
            }

            return;
        }
    }

    getPhotos(cb);
}

module.exports = exports["default"];

},{"./jsonp":3}],3:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports["default"] = jsonp;

function jsonp(url, cb) {
    var callbackName = "jsonp_callback_" + Math.round(100000 * Math.random());

    var script = document.createElement("script");

    window[callbackName] = function (data) {
        delete window[callbackName];

        document.body.removeChild(script);

        cb(null, data);
    };

    script.src = url + (url.indexOf("?") > -1 ? "&" : "?") + "callback=" + callbackName;

    script.onerror = function () {
        return cb(new Error("Failed to load script"));
    };

    document.body.appendChild(script);
}

module.exports = exports["default"];

},{}],4:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Particle = (function () {
    function Particle(flare) {
        _classCallCheck(this, Particle);

        this.flare = flare;

        this.radius = 300;

        this.init();
    }

    _createClass(Particle, [{
        key: "init",
        value: function init() {
            this.x = Math.random() * this.flare.x || 0;
            this.y = Math.random() * this.flare.y || 0;

            this.startLife = Math.ceil(Math.random() * 100);
            this.currentLife = this.startLife;

            this.color = { rgb: [], a: 1 };

            for (var i = 0; i < 3; ++i) {
                this.color.rgb.push(Math.floor(Math.random() * 255));
            }

            this.color.rgb = this.color.rgb.join(", ");

            this.speed = {
                x: Math.random(),
                y: Math.random()
            };
        }
    }, {
        key: "update",
        value: function update() {
            var ratio = this.currentLife / this.startLife;

            this.color.a = 1 - ratio;

            this.currentLife -= 1;

            if (this.currentLife === 0) {
                this.init();
            }
        }
    }, {
        key: "move",
        value: function move() {
            if (this.x <= 0 || this.x > this.flare.x) {
                this.speed.x = -this.speed.x;
            }

            if (this.y <= 0 || this.y > this.flare.y) {
                this.speed.y = -this.speed.y;
            }

            this.x += this.speed.x;
            this.y += this.speed.y;
        }
    }, {
        key: "render",
        value: function render() {
            this.move();
            this.draw();
        }
    }, {
        key: "draw",
        value: function draw() {
            this.flare.ctx.beginPath();
            this.flare.ctx.fillStyle = this.gradient();
            this.flare.ctx.arc(this.x, this.y, this.radius, Math.PI * 2, false);
            this.flare.ctx.fill();
            this.flare.ctx.closePath();
        }
    }, {
        key: "gradient",
        value: function gradient() {
            var g = this.flare.ctx.createRadialGradient(this.x, this.y, 0, this.x, this.y, this.radius);

            g.addColorStop(0, "rgba(" + this.color.rgb + "," + this.color.a * 0.2 + ")");
            g.addColorStop(0.5, "rgba(" + this.color.rgb + "," + this.color.a * 0.1 + ")");
            g.addColorStop(1, "rgba(" + this.color.rgb + "," + this.color.a * 0 + ")");

            return g;
        }
    }]);

    return Particle;
})();

exports["default"] = Particle;
module.exports = exports["default"];

},{}]},{},[1])


//# sourceMappingURL=app.min.js.map